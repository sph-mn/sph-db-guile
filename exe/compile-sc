#!/bin/sh

# description
# * compiles the sc source code to c
# dependencies
# * sph-sc
# * clang-format

root="$PWD"
source_sc="$root/source/sc"
source_c="$root/source/c-precompiled"

copy_submodules() {
  # copy code files from submodules.
  # to not have the whole submodule repository in the source directory
  a=submodules/sph-sc-lib/source/sc
  b="$a/sph"
  f="$s/foreign"
  mkdir -p "$f/sph" &&
  cp --update --target-directory="$f" "$a/sph.sc" &&
  cp --update --target-directory="$f/sph" "$b/guile.sc" "$b/mi-list.sc" "$b/one.sc"
}



export SC_LOAD_PATH="$PWD/source/sc/foreign"
dir=source/c-precompiled
file="$dir/main.c"

copy_submodules &&
mkdir -p "$dir" &&
sc source/sc/main.sc "$file" &&
format_c "$file" &&
chmod 755 "$dir" &&
chmod 644 "$file"






root="$PWD"
s=source/sc
sm="$s/main"
c="$root/source/c-precompiled"
export SC_LOAD_PATH="$root/$s"

copy_submodules() {
  # copy code files from submodules.
  # to not have the whole submodule repository in the source directory
  a=submodules/sph-sc-lib/source/sc
  b="$a/sph"
  f="$s/foreign"
  mkdir -p "$f/sph" &&
  cp --update --target-directory="$f" "$a/sph.sc" &&
  cp --update --target-directory="$f/sph" \
    "$b/status.sc" "$b/mi-list.sc" "$b/imht-set.sc" "$b/one.sc"
}

compile_sc() {
  # create the c source code
  copy_example_config &&
  copy_submodules &&
  cd "$s" &&
  find -type f -name "*.sc" -exec sc --parents '{}' "$c" \; &&
  cd "$root" &&
  find "$c" -type f -exec ./exe/format-c -i '{}' \; &&
  mv "$c/main/sph-db.c" "$c/main/sph-db.h"
}

mkdir -p "$c" &&
compile_sc $@
